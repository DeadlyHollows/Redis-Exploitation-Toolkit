from importlib import import_module
from pkgutil import iter_modules


AVAILABLE_ATTACKS = [
    { name: getattr(import_module(f".{name}", "modules"), "AVAILABLE_ATTACKS") }
    for _, name, _ in iter_modules(["modules"])
]



# This is the sequence in which we wish to run the
# attacks.
# TODO [medium-priority]: Add a more flexible config support to selectively
# run the attacks.
# Make separate arrangement for specifying attack sequence.
# Probably JSON/YAML config
def get_automated_attack_sequence():
    return ["enum", "rce"]



def modules_help():
    return "\nHere is a list of the available modules:\n\n" \
    "- enum: Module containing various enumeration attack techniques.\n" \
    "- rce: Module containing various attacks pertaining to remote command execution.\n"



def enum_help():
    return "\nUse this attack module to perform various enumeration attacks.\n" \
    "\n[*] Available attack sub-modules:\n" \
    "1. acl\n" \
    "   - retrieve_acl_hashes\n" \
    "   - crack_acl_password_hashes\n" \
    "   - retrieve_acl_logs\n" \
    "2. auth\n" \
    "   - auth_existence_check\n" \
    "   - crack_weak_auth\n" \
    "3. keys\n" \
    "   - keys_enum\n" \
    "4. misc\n" \
    "   - monitor_server_commands\n" \
    "\n[*] Outcome:\n" \
    "With this module, you can enumerate keys, connection credentials,\n" \
    "ACL passwords & logs and the commands received by the Redis server.\n"



def rce_help():
    return "\nUse this attack module to perform various attacks providing an RCE\n" \
    "opportunity.\n" \
    "\n[*] Available attack sub-modules:\n" \
    "1. exec\n" \
    "   - webshell\n" \
    "   - ssh\n" \
    "   - crontab\n" \
    "2. module_load\n" \
    "   - load_malicious_module\n" \
    "\n[*] Outcome:\n" \
    "With this module, you can launch attacks to gain command execution or\n" \
    "load a malicious module on the Redis server.\n"