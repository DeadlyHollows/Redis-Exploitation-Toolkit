from .exec import get_available_attacks as get_available_exec_attacks
from .module_load import get_available_attacks as get_available_module_load_attacks



AVAILABLE_ATTACKS = [
    { "exec": get_available_exec_attacks() },
    { "module_load": get_available_module_load_attacks() }
]



def get_attack_module_help_message():
    return "\nModule: rce\n\n" \
    "Description:\n" \
    "Use this attack module to perform various attacks resulting in command execution.\n" \
    "\nAvailable attack sub-modules:\n" \
    "1. exec\n" \
    "\nAvailable Techniques:\n" \
    "   - Webshell\n" \
    "   - SSH\n" \
    "   - Crontab\n\n" \
    "2. module_load\n\n" \
    "Description:\n" \
    "Use this attack module to load a Redis Module.\n"



def exec_help():
    return "\nUse this attack module to perform a variety of attacks resulting in\n" \
    "command execution. Currently available exec attack techniques are:\n\n" \
    "- webshell\n" \
    "- ssh\n" \
    "- crontab\n\n" \
    "All of these attack techniques require youto have the permissions to execute\n" \
    "the following commands on the Redis Server:\n" \
    "- CONFIG SET\n" \
    "- CONFIG GET (not mandatory but good to have)\n" \
    "- SAVE\n" \
    "- FLUSHALL/FLUSHDB (not mandatory but good to have)\n" \
    "- SET\n\n" \
    "All of the attack techniques leverage the RDB (dump) file to implant the\n" \
    "payload in the WEBROOT directory or .ssh/authorized_keys file or the \n" \
    "crontabs directory.\n"



def module_load_help():
    return "\nUse this attack module to perform attack to load a malicious Redis module.\n" \
    "Currently this module contains one attack technique:\n\n" \
    "- load_malicious_module\n"