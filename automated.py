from importlib import import_module
from common import launch_exploit
from modules import get_automated_attack_sequence



def execute_attack_sequence(attack_module_path, available_attacks):

    for attack in available_attacks:

        if isinstance(attack, str):
            if isinstance(available_attacks, dict):
                execute_attack_sequence(attack_module_path + [attack],
                        available_attacks[attack])

            else:
                attack_function_path = attack_module_path + [attack]
                launch_exploit(attack_function_path)
                print ("[", "=" * 75 , "]\n")

        else:
            execute_attack_sequence(attack_module_path, attack)



def launch_in_automated_mode():

    print ("\n[INFO] Press CTRL+C to skip an attack.")
    print ("[INFO] Press CTRL+D to stop the tool.\n")

    # It's the JSON specified in config.settings
    # The attack sequence file is stored in 'AUTOMATED_ATTACK_SEQUENCE'
    attack_sequence = get_automated_attack_sequence()

    for attack_module in attack_sequence:
        execute_attack_sequence([attack_module], attack_sequence[attack_module])



if __name__ == "__main__":
    launch_in_automated_mode()